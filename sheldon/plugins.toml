shell = "zsh"

[templates]
defer = "{{ hooks?.pre | nl }}{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}{{ hooks?.post | nl }}"
# Execute the install script in the cloned repository and add its bin directory to $PATH.
fzf-install = "{{ dir }}/install --bin > /dev/null \n[[ ! $PATH =~ {{ dir }} ]] && export PATH=\"$PATH:{{ dir }}/bin\"\n"
# Source all matched script files, integrating them into the shell environment.
fzf-source = "{% for file in files %}source \"{{ file }}\"\n{% endfor %}"

[plugins]

# Defer loading of plugins
[plugins.zsh-defer]
github = "romkatv/zsh-defer"

# Auto-suggestions
[plugins.zsh-autosuggestions]
apply = ["defer"]
github = "zsh-users/zsh-autosuggestions"

# Completions
[plugins.zsh-completions]
apply = ["defer"]
github = "zsh-users/zsh-completions"

# Syntax highlighting
[plugins.F-Sy-H]
apply = ["defer"]
github = "z-shell/F-Sy-H"

# History Manager
[plugins.atuin]
inline = 'eval "$(atuin init zsh)"'

# Vim mode
[plugins.zsh-vi-mode]
github = "jeffreytse/zsh-vi-mode"

# Fuzzy finder
[plugins.fzf]
apply = ['fzf-install', 'fzf-source', 'defer']
github = 'junegunn/fzf'

# Alias
[plugins.zsh-abbr]
apply = ["defer"]
github = "olets/zsh-abbr"

# History search
[plugins.zoxide]
inline = 'eval "$(zoxide init zsh)"'

# Prompt customization
[plugins.starship]
inline = 'eval "$(starship init zsh)"'

# Manage shell environment
[plugins.mise]
inline = 'eval "$(mise activate zsh)"'
